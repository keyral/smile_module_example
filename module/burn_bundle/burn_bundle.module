<?php
define('PER_ROLE_BUNDLE', "administer nodes");

/**
 * Implements hook_menu
 */
function burn_bundle_menu()
{
    $items = array();
    $items['admin/burn/bundle'] = array(
        'title' => 'Burn Bundle',
        'page callback' => 'burn_user_bundle_admin',
        'access arguments' => array(PER_ROLE_BUNDLE),
        'file' => 'include/burn_user_bundle.admin.inc',
    );
    $items['admin/burn/bundle/%action/%burn_id_bundle'] = array(
        'title callback' => 'burn_user_bundle_title',
        'title arguments' => array(3,4),
        'access arguments' => array(PER_ROLE_BUNDLE),
        'page arguments' => array(3,4),
        'file' => 'include/burn_user_bundle.admin.inc',
    );
    return $items;
}

/**
 * Implements hook_entity_info
 */
function burn_bundle_entity_info()
{
    $entity = array();
    $entity['burn_user_bundle'] = array(
        'label' => t('bundle to user burn'),
        // defined to .install
        'base table' => 'burn_user_bundle',
        //first controller
        'controller class' => 'EntityAPIController',
        //to use fieldapi
        'fieldable' => TRUE,
        'entity keys' => array(
            // id primary
            'id' => 'bid',
            'name' => 'name'
        ),
    );
    return $entity;
}

/**
 * Implements hook_entity_info_alter
 */
function burn_bundle_entity_info_alter(&$entity_info){
    foreach (BurnBundleQuery::QueryAll() as $bundle) {
        $entity_info['burn_user']['bundles'][$bundle->name] = array(
            'label' => $bundle->name,
            'admin' => array(
                'path' => 'admin/burn/bundle/edit/%burn_id_bundle',
                'real path' => 'admin/burn/bundle/edit/'.$bundle->bid,
                'bundle argument' => 4,
                'access arguments' => array(PER_ROLE_BUNDLE),
            ),
        );
    }
}

/**
 * Implements hook_load
 * @param $bid
 * @return bool
 *
 * Return value if true or false
 */
function burn_id_bundle_load($bid){
    $bundle = BurnBundleQuery::Load($bid);
    if(isset($bundle) && isset($bundle->name)){
    return $bundle->name;
    }
    else {
        return FALSE;
    }
}